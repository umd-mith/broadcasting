{"version":3,"file":"component---src-templates-entity-tsx-7bb84a81486aed11ecaf.js","mappings":"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","sources":["webpack://broadcasting-a-v-data/./src/utils/labels.ts","webpack://broadcasting-a-v-data/./src/templates/entity.tsx"],"sourcesContent":["interface Radio {\n  [key: string]: {\n    full: string,\n    altshort?: string\n  }\n}\n\nexport const radiomap: Radio = {\n  \"KUOM\": {\n    \"full\": \"University of Minnesota\",\n    \"altshort\": \"WLB/KUOM\"\n  },\n  \"NAEB\": {\n    \"full\": \"National Association of Educational Broadcasters\"\n  },\n  \"NFCB\": {\n    \"full\": \"National Federation of Community Broadcasters\"\n  },\n  \"WHA\": {\n    \"full\": \"Wisconsin Public Radio\"\n  }\n}","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { StaticImage, GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\"\nimport \"./entity.css\"\n\nimport Layout from \"../components/layout\"\n\nimport { radiomap } from \"../utils/labels\"\n\ninterface Reference {\n  collection: string\n  series: string[]\n  title: string\n  URL: string\n}\n\nexport interface EntityData {\n  id: string\n  wikidataLabel: string\n  altLabels: string[]\n  birthDate: string\n  deathDate: string\n  birthPlace: string\n  deathPlace: string\n  wikidataDescription: string\n  description: string\n  employer: string[]\n  fieldOfWork: string[]\n  inceptionDate: string\n  cpfPageID: string\n  naraURL: string[]\n  occupation: string[]\n  viafURL: string[]\n  wikipediaURL: string\n  worldCatURL: string[]\n  snacURL: string[]\n  associatedPlaces: string[]\n  locURL: string[]\n  collections: string[]\n  image: ImageDataLike\n  references: Reference[]\n}\n\ninterface Props {\n  data: {\n    entitiesJson: EntityData\n  }\n}\n\nconst Arrow = (props: any) => <svg {...props} viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>\n\nconst Accordion = ({title, children}: {title: JSX.Element, children: JSX.Element | JSX.Element[]}) => {\n  const [expanded, setExpanded] = React.useState(false)\n  const arrow = expanded ? <Arrow className=\"arrow expanded\"/> : <Arrow className=\"arrow\"/>\n\n  const accRef = React.useRef<HTMLDivElement>(null)\n\n  const handleExpand = () => {\n    const el = accRef.current\n    \n    if (el) {\n      const handler = function() {\n        el.style.removeProperty('--max-height')\n        el.removeEventListener(\"transitionend\", handler)\n      }\n      if (!expanded) {\n        const height = el.scrollHeight\n        el.style.setProperty('--max-height', height + 'px')\n        el.addEventListener(\"transitionend\", handler, false)\n      } else {\n        // TODO: figure out animation on collapse\n      }\n    }\n    setExpanded(!expanded)\n  }\n\n  return (<div className=\"reference\">\n    <h4 onClick={handleExpand}>{arrow} <span>{title}</span></h4>\n    <div className={`accordion ${expanded ? 'expanded' : ''}`} ref={accRef}>\n      {children}\n    </div>\n  </div>)\n}\n\nconst CollReference = ({coll, reference}: {coll: string, reference: {[key: string]: Partial<Reference>[]}}) => {\n  const total = Object.keys(reference).reduce((tot, s) => {tot += reference[s].length; return tot}, 0)\n  let keys = Object.keys(reference).sort()\n  console.log('h', keys)\n  if (keys.indexOf(\"None\") > -1) {\n    keys = [\"None\", ...keys.filter(k => k !== \"None\")]\n  }\n  \n  const label = radiomap[coll]\n  const labelfull = `${label.full} (${label.altshort || coll})`\n  return <Accordion title={<span>{labelfull} <span className=\"registry-coll-chip\">{total}</span></span>}>\n    {\n      keys.map(series => {\n\n        const total = reference[series].length\n\n        const info = <ul>{\n          reference[series].sort((a, b) => {\n            const at = a.title || \"\"\n            const bt = b.title || \"\"\n            return at.trim() > bt.trim() ? 1 : -1\n          }).map(url => (\n            <li key={url.URL || \"\"}>{\n              <a href={url.URL}>{url.title}</a>\n            }</li>\n          ))\n        }</ul>\n        \n        return (\n          <div key={series}>\n            {series !== \"None\" \n            ? <Accordion title={<span>{series !== \"None\" ? series : \"\"} <span className=\"registry-coll-chip\">{total}</span></span>}>\n              {info}\n            </Accordion> \n            : info}\n          </div>\n      )})\n    }\n  </Accordion>\n}\n\nconst References = ({references}: {references: Reference[]}) => {\n\n  // Group by series\n  const bySeries = references.reduce((acc: {[key: string]: Partial<Reference>[]}, x: Reference) => {\n    for (const s of x.series) {\n      (acc[s] = acc[s] || []).push({'collection': x.collection, 'title': x.title, 'URL': x.URL})\n    }\n    return acc\n  }, {})\n\n  const grouped: {[key: string]: {[key: string]: Partial<Reference>[]}} = {}\n\n  for (const series of Object.keys(bySeries)) {\n    for (const url of bySeries[series]) {\n      const coll = url.collection || \"\"\n      grouped[coll] = grouped[coll] || {};\n      (grouped[coll][series] = grouped[coll][series] || []).push(url)\n    }\n  }\n\n  return <>{Object.keys(grouped).sort().map(coll => (\n    <CollReference coll={coll} reference={grouped[coll]} key={coll}/>\n  ))}</>\n}\n\nconst Entity = ({ data }: Props) => {\n  const entity = data.entitiesJson\n\n  let image = (\n    <StaticImage\n      src=\"../images/missing-person.png\"\n      width={300}\n      alt=\"Unknown Image\"\n    />\n  )\n\n  let abstract: JSX.Element | undefined\n\n  if (entity.image) {\n    const img = getImage(entity.image)\n    if (img) {\n      image = <GatsbyImage image={img} alt={entity.wikidataLabel} />\n    }\n  }\n\n  if (entity.description) {\n    const readMore = entity.wikipediaURL ?  <em>Read more at <a href={entity.wikipediaURL}>Wikipedia</a>...</em> : ''\n    abstract = (\n      <p>\n        {entity.description}\n        {readMore}\n      </p>\n    )\n  }\n\n  let birth = null\n  if (entity.birthDate) {\n    const t = new Date(entity.birthDate)\n    birth = `${t.getUTCFullYear()}`\n    if (entity.birthPlace) {\n      birth += `, ${entity.birthPlace}`\n    }\n  }\n\n  let death = null\n  if (entity.deathDate) {\n    const t = new Date(entity.deathDate)\n    death = `${t.getUTCFullYear()}`\n    if (entity.deathPlace) {\n      death += `, ${entity.deathPlace}`\n    }\n  }\n\n  let inception = null\n  if (entity.inceptionDate) {\n    const t = new Date(entity.inceptionDate)\n    inception = `${t.getUTCFullYear()}`\n  }\n\n  return (\n    <Layout title={entity.wikidataLabel}>\n      <div className=\"page-cpf\">\n        <section>\n          <h1>\n            <span>Entity | </span>{entity.wikidataLabel}\n          </h1>\n          <div className=\"cpf\">\n            <div className=\"image\">{image}</div>\n            <div className=\"bio\">\n              {abstract}\n              <p>\n                <Field label=\"Born\" value={birth} />\n                <Field label=\"Died\" value={death} />\n                <Field label=\"Inception\" value={inception} />\n              </p>\n              <p>\n                <Field label=\"Alternate Names\" value={entity.altLabels} />\n                <Field label=\"Occupation(s)\" value={entity.occupation} />\n                <Field\n                  label=\"Field(s) of Work\"\n                  value={entity.fieldOfWork}\n                />\n                <Field label=\"Employer(s)\" value={entity.employer} />\n                <Field label=\"Associated Place(s)\" value={entity.associatedPlaces} />\n              </p>\n              <div>\n                <OptionalLink text=\"Social Networks and Archival Context (SNAC) Record\" url={entity.snacURL} />\n                <OptionalLink text=\"Library of Congress Name Authority File (LCNAF)\" url={entity.locURL} />\n                <OptionalLink text=\"Virtual International Authority File (VIAF)\" url={entity.viafURL} />\n                <OptionalLink text=\"WorldCat Record\" url={entity.worldCatURL} />\n                <OptionalLink text=\"National Archives and Records Administration (NARA)\" url={entity.naraURL} />\n              </div>\n              <div className=\"references\">\n                <h3>Appears in:</h3>\n                <References references={entity.references} />\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\ntype FieldProps = {\n  label: string\n  value?: string[] | string | null\n}\n\nconst Field = ({ label, value }: FieldProps): JSX.Element | null => {\n  if (value === undefined || value === null || value.length === 0) {\n    return null\n  }\n\n  if (typeof value === \"string\") {\n    value = [value]\n  }\n\n  if (value[0].match(/^https?:/)) {\n    return (\n      <>\n        <span className=\"label\">{label}</span>: &nbsp;\n        {value.map((v: string) => (\n          <span>\n            <Link to={v}>{v}</Link>&nbsp;\n          </span>\n        ))}\n        <br />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <span className=\"label\">{label}</span>: {value.join(\", \")} <br />\n    </>\n  )\n}\n\nconst OptionalLink = ({text, url}: {text: string, url: string[] | string}): JSX.Element | null => {\n  if (Array.isArray(url) && url.length > 1) {\n    return (\n      <>\n        {url.map((u, i) => (\n          <div key={`url-${u}`}><a href={u}>{text} {i + 1}</a></div>\n        ))}\n      </>\n    )\n  } else if (url) {\n    return <><a href={url as string}>{text}</a><br /></>\n  } else {\n    return null\n  } \n}\n\nexport const query = graphql`\n  query($id: String!) {\n    entitiesJson(id: { eq: $id }) {\n      id\n      wikidataLabel\n      altLabels\n      birthDate\n      deathDate\n      birthPlace\n      deathPlace\n      description\n      wikidataDescription\n      employer\n      fieldOfWork\n      inceptionDate\n      cpfPageID\n      naraURL\n      occupation\n      viafURL\n      wikipediaURL\n      worldCatURL\n      snacURL\n      associatedPlaces\n      locURL\n      collections\n      image {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n      references {\n        collection,\n        series,\n        title,\n        URL\n      }\n    }\n  }    \n`\n\nexport default Entity\n"],"names":["radiomap","Arrow","props","React","viewBox","d","Accordion","title","children","expanded","setExpanded","arrow","className","accRef","onClick","el","current","height","scrollHeight","style","setProperty","addEventListener","handler","removeProperty","removeEventListener","ref","CollReference","coll","reference","total","Object","keys","reduce","tot","s","length","sort","console","log","indexOf","filter","k","label","labelfull","full","altshort","map","series","info","a","b","at","bt","trim","url","key","URL","href","References","bySeries","references","acc","x","push","collection","grouped","Field","value","match","v","Link","to","join","OptionalLink","text","Array","isArray","u","i","abstract","entity","data","entitiesJson","image","StaticImage","src","width","alt","__imageData","img","getImage","GatsbyImage","wikidataLabel","description","readMore","wikipediaURL","birth","birthDate","Date","getUTCFullYear","birthPlace","death","deathDate","deathPlace","inception","inceptionDate","Layout","altLabels","occupation","fieldOfWork","employer","associatedPlaces","snacURL","locURL","viafURL","worldCatURL","naraURL"],"sourceRoot":""}