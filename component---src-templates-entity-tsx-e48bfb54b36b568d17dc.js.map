{"version":3,"file":"component---src-templates-entity-tsx-e48bfb54b36b568d17dc.js","mappings":"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","sources":["webpack://broadcasting-a-v-data/./src/templates/entity.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { StaticImage, GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport \"./entity.css\"\n\nimport Layout from \"../components/layout\"\n\ninterface Reference {\n  collection: string\n  series: string\n  title: string\n  URL: string\n}\n\nexport interface EntityData {\n  id: string\n  wikidataLabel: string\n  altLabels: string[]\n  birthDate: string\n  deathDate: string\n  birthPlace: string\n  deathPlace: string\n  wikidataDescription: string\n  description: string\n  employer: string[]\n  fieldOfWork: string[]\n  inceptionDate: string\n  cpfPageID: string\n  naraURL: string[]\n  occupation: string[]\n  viafURL: string[]\n  wikipediaURL: string\n  worldCatURL: string[]\n  snacURL: string[]\n  associatedPlaces: string[]\n  locURL: string[]\n  collections: string[]\n  image: IGatsbyImageData\n  references: Reference[]\n}\n\ninterface Props {\n  data: {\n    entitiesJson: EntityData\n  }\n}\n\nconst formatReferences = (references: Reference[]) => {\n  // Group by series\n  const bySeries = references.reduce((acc: {[key: string]: Partial<Reference>[]}, x: Reference) => {\n    (acc[x.series] = acc[x.series] || []).push({'collection': x.collection, 'title': x.title, 'URL': x.URL})\n    return acc\n  }, {})\n\n  const grouped: {[key: string]: {[key: string]: Partial<Reference>[]}} = {}\n\n  for (const series of Object.keys(bySeries)) {\n    for (const url of bySeries[series]) {\n      const coll = url.collection || \"\"\n      grouped[coll] = grouped[coll] || {};\n      (grouped[coll][series] = grouped[coll][series] || []).push(url)\n    }\n  }\n\n  console.log(references, bySeries, grouped)\n\n  return Object.keys(grouped).sort().map(coll => (\n    <div key={coll}>\n      <h4>{coll}</h4>\n      {\n        Object.keys(grouped[coll]).sort().map(series => (\n          <div key={series}>\n            <h5>{series !== \"None\" ? series : \"\"}</h5>\n            <ul>{\n              grouped[coll][series].sort((a, b) => {\n                const at = a.title || \"\"\n                const bt = b.title || \"\"\n                return at.trim() > bt.trim() ? 1 : -1\n              }).map(url => (\n                <li key={url.URL || \"\"}>{\n                  <a href={url.URL}>{url.title}</a>\n                }</li>\n              ))\n            }</ul>\n          </div>\n        ))\n      }\n    </div>\n\n  ))\n}\n\nconst Entity = ({ data }: Props) => {\n  const entity = data.entitiesJson\n\n  let image = (\n    <StaticImage\n      src=\"../images/missing-person.png\"\n      width={300}\n      alt=\"Unknown Image\"\n    />\n  )\n\n  let abstract: JSX.Element | undefined\n\n  if (entity.image) {\n    const img = getImage(entity.image)\n    if (img) {\n      image = <GatsbyImage image={img} alt={entity.wikidataLabel} />\n    }\n  }\n\n  if (entity.description) {\n    const readMore = entity.wikipediaURL ?  <em>Read more at <a href={entity.wikipediaURL}>Wikipedia</a>...</em> : ''\n    abstract = (\n      <p>\n        {entity.description}\n        {readMore}\n      </p>\n    )\n  }\n\n  let birth = null\n  if (entity.birthDate) {\n    const t = new Date(entity.birthDate)\n    birth = `${t.getUTCFullYear()}`\n    if (entity.birthPlace) {\n      birth += `, ${entity.birthPlace}`\n    }\n  }\n\n  let death = null\n  if (entity.deathDate) {\n    const t = new Date(entity.deathDate)\n    death = `${t.getUTCFullYear()}`\n    if (entity.deathPlace) {\n      death += `, ${entity.deathPlace}`\n    }\n  }\n\n  let inception = null\n  if (entity.inceptionDate) {\n    const t = new Date(entity.inceptionDate)\n    inception = `${t.getUTCFullYear()}`\n  }\n\n  return (\n    <Layout title={entity.wikidataLabel}>\n      <div className=\"page-cpf\">\n        <section>\n          <h1>\n            {entity.wikidataLabel}\n          </h1>\n          <div className=\"cpf\">\n            <div className=\"image\">{image}</div>\n            <div className=\"bio\">\n              <h2>{entity.wikidataLabel}</h2>\n              {abstract}\n              <p>\n                <Field label=\"Born\" value={birth} />\n                <Field label=\"Died\" value={death} />\n                <Field label=\"Inception\" value={inception} />\n              </p>\n              <p>\n                <Field label=\"Alternate Names\" value={entity.altLabels} />\n                <Field label=\"Occupation(s)\" value={entity.occupation} />\n                <Field\n                  label=\"Field(s) of Work\"\n                  value={entity.fieldOfWork}\n                />\n                <Field label=\"Employer(s)\" value={entity.employer} />\n                <Field label=\"Associated Place(s)\" value={entity.associatedPlaces} />\n              </p>\n              <div>\n                <OptionalLink text=\"Social Networks and Archival Context (SNAC) Record\" url={entity.snacURL} />\n                <OptionalLink text=\"Library of Congress Name Authority File (LCNAF)\" url={entity.locURL} />\n                <OptionalLink text=\"Virtual International Authority File (VIAF)\" url={entity.viafURL} />\n                <OptionalLink text=\"WorldCat Record\" url={entity.worldCatURL} />\n                <OptionalLink text=\"National Archives and Records Administration (NARA)\" url={entity.naraURL} />\n              </div>\n              <div className=\"references\">\n                <h3>Appears in:</h3>\n                {formatReferences(entity.references)}\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\ntype FieldProps = {\n  label: string\n  value?: string[] | string | null\n}\n\nconst Field = ({ label, value }: FieldProps): JSX.Element | null => {\n  if (value === undefined || value === null || value.length === 0) {\n    return null\n  }\n\n  if (typeof value === \"string\") {\n    value = [value]\n  }\n\n  if (value[0].match(/^https?:/)) {\n    return (\n      <>\n        <span className=\"label\">{label}</span>: &nbsp;\n        {value.map((v: string) => (\n          <span>\n            <Link to={v}>{v}</Link>&nbsp;\n          </span>\n        ))}\n        <br />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <span className=\"label\">{label}</span>: {value.join(\", \")} <br />\n    </>\n  )\n}\n\nconst OptionalLink = ({text, url}: {text: string, url: string[] | string}): JSX.Element | null => {\n  if (Array.isArray(url) && url.length > 1) {\n    return (\n      <>\n        {url.map((u, i) => (\n          <div key={`url-${u}`}><a href={u}>{text} {i + 1}</a></div>\n        ))}\n      </>\n    )\n  } else if (url) {\n    return <><a href={url as string}>{text}</a><br /></>\n  } else {\n    return null\n  } \n}\n\n// function joinLists(a, b) {\n//   if (!a) a = []\n//   if (!b) b = []\n//   return a.concat(b)\n// }\n\nexport const query = graphql`\n  query($id: String!) {\n    entitiesJson(id: { eq: $id }) {\n      id\n      wikidataLabel\n      altLabels\n      birthDate\n      deathDate\n      birthPlace\n      deathPlace\n      description\n      wikidataDescription\n      employer\n      fieldOfWork\n      inceptionDate\n      cpfPageID\n      naraURL\n      occupation\n      viafURL\n      wikipediaURL\n      worldCatURL\n      snacURL\n      associatedPlaces\n      locURL\n      collections\n      references {\n        collection,\n        series,\n        title,\n        URL\n      }\n    }\n  }    \n`\n\nexport default Entity\n"],"names":["Field","label","value","length","match","className","map","v","to","join","OptionalLink","text","url","Array","isArray","u","i","key","href","abstract","entity","data","entitiesJson","image","S","src","width","alt","img","getImage","G","wikidataLabel","description","readMore","wikipediaURL","birth","birthDate","Date","getUTCFullYear","birthPlace","death","deathDate","deathPlace","inception","inceptionDate","title","altLabels","occupation","fieldOfWork","employer","associatedPlaces","snacURL","locURL","viafURL","worldCatURL","naraURL","references","bySeries","reduce","acc","x","series","push","collection","URL","grouped","Object","keys","coll","console","log","sort","a","b","at","bt","trim","formatReferences"],"sourceRoot":""}